{"ast":null,"code":"import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/CartReducer';\nimport { orderCreateReducer, orderDetailsReducer, orderMineListReducer, orderPayReducer } from './reducers/OrderReducer';\nimport { prodcutDetailsReducer, prodcutListReducer } from './reducers/ProductReducer';\nimport { userDetailsReducer, userRegisterReducer, userSigninReducer, userUpdateProfileReducer } from './reducers/UserReducer';\nconst initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {},\n    paymentMethod: 'PayPal'\n  },\n  userSignin: {\n    userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n  }\n};\nconst reducer = combineReducers({\n  productList: prodcutListReducer,\n  productDetails: prodcutDetailsReducer,\n  cart: cartReducer,\n  userRegister: userRegisterReducer,\n  userSignin: userSigninReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderMineList: orderMineListReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["D:/PSU/19thWestcliff/Project/Project-eCommerce/web403-eCommerce/amazon-frontend/src/Store.js"],"names":["applyMiddleware","combineReducers","compose","createStore","thunk","cartReducer","orderCreateReducer","orderDetailsReducer","orderMineListReducer","orderPayReducer","prodcutDetailsReducer","prodcutListReducer","userDetailsReducer","userRegisterReducer","userSigninReducer","userUpdateProfileReducer","initialState","cart","cartItems","localStorage","getItem","JSON","parse","shippingAddress","paymentMethod","userSignin","userInfo","reducer","productList","productDetails","userRegister","orderCreate","orderDetails","orderPay","orderMineList","userDetails","userUpdateProfile","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,OAA3C,EAAoDC,WAApD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAkDC,oBAAlD,EAAwEC,eAAxE,QAA+F,yBAA/F;AACA,SAASC,qBAAT,EAAgCC,kBAAhC,QAA0D,2BAA1D;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAkDC,iBAAlD,EAAqEC,wBAArE,QAAqG,wBAArG;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAC;AACDC,IAAAA,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACRC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADQ,GAER,EAHF;AAIDG,IAAAA,eAAe,EAAEJ,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACdC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADc,GAEd,EANF;AAODI,IAAAA,aAAa,EAAE;AAPd,GADY;AAUjBC,EAAAA,UAAU,EAAC;AACPC,IAAAA,QAAQ,EAAEP,YAAY,CAACC,OAAb,CAAqB,UAArB,IACPC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADO,GAEP;AAHI;AAVM,CAArB;AAgBA,MAAMO,OAAO,GAAG1B,eAAe,CAAC;AAC5B2B,EAAAA,WAAW,EAAEjB,kBADe;AAE5BkB,EAAAA,cAAc,EAAEnB,qBAFY;AAG5BO,EAAAA,IAAI,EAAEZ,WAHsB;AAI5ByB,EAAAA,YAAY,EAAEjB,mBAJc;AAK5BY,EAAAA,UAAU,EAAEX,iBALgB;AAM5BiB,EAAAA,WAAW,EAAEzB,kBANe;AAO5B0B,EAAAA,YAAY,EAAEzB,mBAPc;AAQ5B0B,EAAAA,QAAQ,EAAExB,eARkB;AAS5ByB,EAAAA,aAAa,EAAE1B,oBATa;AAU5B2B,EAAAA,WAAW,EAAEvB,kBAVe;AAW5BwB,EAAAA,iBAAiB,EAAGrB;AAXQ,CAAD,CAA/B;AAcA,MAAMsB,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+CrC,OAAvE;AACA,MAAMsC,KAAK,GAAGrC,WAAW,CACrBwB,OADqB,EAErBX,YAFqB,EAGrBqB,eAAe,CAACrC,eAAe,CAACI,KAAD,CAAhB,CAHM,CAAzB;AAMA,eAAeoC,KAAf","sourcesContent":["import { applyMiddleware, combineReducers, compose, createStore } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { cartReducer } from './reducers/CartReducer';\r\nimport { orderCreateReducer, orderDetailsReducer, orderMineListReducer, orderPayReducer } from './reducers/OrderReducer';\r\nimport { prodcutDetailsReducer, prodcutListReducer } from './reducers/ProductReducer';\r\nimport { userDetailsReducer, userRegisterReducer, userSigninReducer, userUpdateProfileReducer } from './reducers/UserReducer';\r\n\r\nconst initialState = {\r\n    cart:{\r\n        cartItems: localStorage.getItem('cartItems')\r\n         ? JSON.parse(localStorage.getItem('cartItems'))\r\n         : [],\r\n        shippingAddress: localStorage.getItem('shippingAddress')\r\n         ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n         : {},\r\n        paymentMethod: 'PayPal',\r\n    },\r\n    userSignin:{\r\n        userInfo: localStorage.getItem('userInfo')\r\n         ? JSON.parse(localStorage.getItem('userInfo'))\r\n         : null,\r\n    }\r\n};\r\nconst reducer = combineReducers({\r\n    productList: prodcutListReducer,\r\n    productDetails: prodcutDetailsReducer,\r\n    cart: cartReducer,\r\n    userRegister: userRegisterReducer,\r\n    userSignin: userSigninReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderMineList: orderMineListReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile : userUpdateProfileReducer\r\n});\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducer, \r\n    initialState,\r\n    composeEnhancer(applyMiddleware(thunk)),\r\n);\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}