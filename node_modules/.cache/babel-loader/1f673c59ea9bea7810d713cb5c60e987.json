{"ast":null,"code":"import { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from \"../constants/UserConstant\";\nimport axios from \"../Axios\";\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};\nexport const detailsUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo === null || userInfo === void 0 ? void 0 : userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  dispatch({\n    type: USER_UPDATE_PROFILE_REQUEST,\n    payload: user\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["D:/PSU/19thWestcliff/Project/ProjectAmazon/Amazon-Clone/amazon-frontend/src/actions/UserAction.js"],"names":["USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","axios","register","name","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","signin","signout","removeItem","detailsUser","userId","getState","userSignin","userInfo","get","headers","Authorization","token","updateUserProfile","user","put"],"mappings":"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","sourcesContent":["import { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from \"../constants/UserConstant\"\r\nimport axios from \"../Axios\"\r\n\r\n\r\n\r\nexport const register = (name,email,password) => async(dispatch) => {\r\n    dispatch({\r\n        type: USER_REGISTER_REQUEST,\r\n        payload: {email, password}\r\n    });\r\n    try{\r\n        const {data} = await axios.post('/api/users/register', {name,email, password});\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        });\r\n        dispatch({\r\n            type: USER_SIGNIN_SUCCESS,\r\n            payload: data\r\n        });\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const signin = (email,password) => async(dispatch) => {\r\n    dispatch({\r\n        type: USER_SIGNIN_REQUEST,\r\n        payload: {email, password}\r\n    });\r\n    try{\r\n        const {data} = await axios.post('/api/users/signin', {email, password});\r\n        dispatch({\r\n            type: USER_SIGNIN_SUCCESS,\r\n            payload: data\r\n        });\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: USER_SIGNIN_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const signout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    localStorage.removeItem('cartItems');\r\n    localStorage.removeItem('shippingAddress');\r\n    dispatch({\r\n        type: USER_SIGNOUT\r\n    });\r\n}\r\n\r\n\r\nexport const detailsUser = (userId) => async (dispatch, getState) => {\r\n  dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await axios.get(`/api/users/${userId}`, {\r\n      headers: { Authorization: `Bearer ${userInfo?.token}` },\r\n    });\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: USER_DETAILS_FAIL, payload: message });\r\n  }\r\n};\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await axios.put(`/api/users/profile`, user, {\r\n      headers: { Authorization: `Bearer ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: USER_UPDATE_PROFILE_FAIL, payload: message });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}